# this just sets up the consul layer
version: '3.7'

# client_addr is set to 0.0.0.0 to make control from the host easier
# it should be disabled for real topologies

networks:
  consul:
    ipam:
      driver: default
      config:
        - subnet: '10.0.0.0/16'
# dc1: 10.0.1.0/24
# dc2: 10.0.2.0/24

# https://yipee.io/2017/06/getting-kubernetes-pod-features-using-native-docker-commands/
services:
  dc1-server1-pod:
    container_name: 'dc1-server1-pod'
    image: gcr.io/google_containers/pause:1.0
    restart: always
    hostname: dc1-server1-pod
    dns: 8.8.8.8
    networks:
      consul:
        ipv4_address: '10.0.1.11'

  dc1-server1:
    network_mode: 'service:dc1-server1-pod'
    depends_on:
      - dc1-server1-pod
    volumes:
      - 'dc1-server1:/consul/data'
      - './cache/tls:/tls:ro'
    image: '${CONSUL_IMAGE:-consul:1.4.2}'
    command:
      - 'agent'
      - '-hcl'
      - |
        server = true
        client_addr = "0.0.0.0"
        ui = true
        bootstrap_expect = 1
        datacenter = "dc1"
        disable_update_check = true
        log_level = "debug"
        primary_datacenter = "dc1"
        encrypt = "${CONSUL_GOSSIP_KEY:-}"
        connect {
            enabled = true
        }
        acl {
            enabled = true
            default_policy = "deny"
            down_policy = "async-cache"
            tokens {
                agent = "${AGENT_TOKEN_DC1_SERVER1:-unspecified}"
                agent_master = "66976a62-f596-4655-8a62-78741a708c44"
            }
        }
        ${TLS_DISABLED:-}verify_incoming = true
        ${TLS_DISABLED:-}verify_outgoing = true
        ${TLS_DISABLED:-}verify_server_hostname = true
        ${TLS_DISABLED:-}ca_file   = "/tls/consul-agent-ca.pem"
        ${TLS_DISABLED:-}cert_file = "/tls/dc1-server-consul-0.pem"
        ${TLS_DISABLED:-}key_file  = "/tls/dc1-server-consul-0-key.pem"

########################################################
  dc2-server1-pod:
    container_name: 'dc2-server1-pod'
    image: gcr.io/google_containers/pause:1.0
    restart: always
    hostname: dc2-server1-pod
    dns: 8.8.8.8
    networks:
      consul:
        ipv4_address: '10.0.2.11'

  dc2-server1:
    network_mode: 'service:dc2-server1-pod'
    depends_on:
      - dc2-server1-pod
    volumes:
      - 'dc2-server1:/consul/data'
      - './cache/tls:/tls:ro'
    image: '${CONSUL_IMAGE:-consul:1.4.2}'
    command:
      - 'agent'
      - '-hcl'
      - |
        server = true
        client_addr = "0.0.0.0"
        ui = true
        bootstrap_expect = 1
        datacenter = "dc2"
        disable_update_check = true
        log_level = "debug"
        primary_datacenter = "dc1"
        encrypt = "${CONSUL_GOSSIP_KEY:-}"
        retry_join_wan = [ "10.0.1.11" ]
        connect {
            enabled = true
        }
        acl {
            enabled = true
            default_policy = "deny"
            down_policy = "async-cache"
            enable_token_replication = true
            tokens {
                agent = "${AGENT_TOKEN_DC1_SERVER1:-unspecified}"
                agent_master = "66976a62-f596-4655-8a62-78741a708c44"
                replication = "${REPLICATION_TOKEN:-unspecified}"
            }
        }
        ${TLS_DISABLED:-}verify_incoming = true
        ${TLS_DISABLED:-}verify_outgoing = true
        ${TLS_DISABLED:-}verify_server_hostname = true
        ${TLS_DISABLED:-}ca_file   = "/tls/consul-agent-ca.pem"
        ${TLS_DISABLED:-}cert_file = "/tls/dc2-server-consul-0.pem"
        ${TLS_DISABLED:-}key_file  = "/tls/dc2-server-consul-0-key.pem"

########################################################
  dc1-client1-pod:
    container_name: 'dc1-client1-pod'
    image: gcr.io/google_containers/pause:1.0
    restart: always
    hostname: dc1-client1-pod
    dns: 8.8.8.8
    networks:
      consul:
        ipv4_address: '10.0.1.12'

  dc1-client1:
    network_mode: 'service:dc1-client1-pod'
    depends_on:
      - dc1-client1-pod
      - dc1-server1
    volumes:
      - 'dc1-client1:/consul/data'
      - './cache/tls:/tls:ro'
    image: '${CONSUL_IMAGE:-consul:1.4.2}'
    command:
      - 'agent'
      - '-hcl'
      - |
        server = false
        client_addr = "0.0.0.0"
        retry_join = [ "10.0.1.11" ]
        ui = true
        datacenter = "dc1"
        disable_update_check = true
        log_level = "debug"
        primary_datacenter = "dc1"
        encrypt = "${CONSUL_GOSSIP_KEY:-}"
        connect {
            enabled = true
        }
        ports {
          grpc = 8502
        }
        acl {
            enabled = true
            default_policy = "deny"
            down_policy = "async-cache"
            tokens {
                agent = "${AGENT_TOKEN_DC1_CLIENT1:-unspecified}"
                agent_master = "66976a62-f596-4655-8a62-78741a708c44"
            }
        }
        ${TLS_DISABLED:-}verify_incoming = true
        ${TLS_DISABLED:-}verify_outgoing = true
        ${TLS_DISABLED:-}verify_server_hostname = true
        ${TLS_DISABLED:-}ca_file   = "/tls/consul-agent-ca.pem"
        ${TLS_DISABLED:-}cert_file = "/tls/dc1-client-consul-0.pem"
        ${TLS_DISABLED:-}key_file  = "/tls/dc1-client-consul-0-key.pem"

########################################################
  dc1-client2-pod:
    container_name: 'dc1-client2-pod'
    image: gcr.io/google_containers/pause:1.0
    restart: always
    hostname: dc1-client2-pod
    networks:
      consul:
        ipv4_address: '10.0.1.13'

  dc1-client2:
    network_mode: 'service:dc1-client2-pod'
    depends_on:
      - dc1-client2-pod
      - dc1-server1
    volumes:
      - 'dc1-client2:/consul/data'
      - './cache/tls:/tls:ro'
    image: '${CONSUL_IMAGE:-consul:1.4.2}'
    command:
      - 'agent'
      - '-hcl'
      - |
        server = false
        client_addr = "0.0.0.0"
        retry_join = [ "10.0.1.11" ]
        ui = true
        datacenter = "dc1"
        disable_update_check = true
        log_level = "debug"
        primary_datacenter = "dc1"
        encrypt = "${CONSUL_GOSSIP_KEY:-}"
        connect {
            enabled = true
        }
        ports {
          grpc = 8502
        }
        acl {
            enabled = true
            default_policy = "deny"
            down_policy = "async-cache"
        }
        ${TLS_DISABLED:-}verify_incoming = true
        ${TLS_DISABLED:-}verify_outgoing = true
        ${TLS_DISABLED:-}verify_server_hostname = true
        ${TLS_DISABLED:-}ca_file   = "/tls/consul-agent-ca.pem"
        ${TLS_DISABLED:-}cert_file = "/tls/dc1-client-consul-0.pem"
        ${TLS_DISABLED:-}key_file  = "/tls/dc1-client-consul-0-key.pem"

volumes:
  dc1-server1:
  dc2-server1:
  dc1-client1:
  dc1-client2:
